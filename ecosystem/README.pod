=encoding utf8

=head1 NAME

cp6t-ecosystem - Perl 6 ecosystem scraping

=head1 SYNOPSIS

    ./nix-build.sh ./ecosystem
    result/bin/cp6t-ecosystem cpan update-archives ecosystem/cpan.archives
    result/bin/cp6t-ecosystem cpan generate-nix ecosystem/cpan.archives > ecosystem/cpan.nix
    result/bin/cp6t-ecosystem database generate ecosystem/database.sqlite3

=head1 DESCRIPTION

cp6t-ecosystem performs maintenance on the cpan.archives, cpan.nix, and
p6c.nix files.

=head2 cp6t-ecosystem cpan update-archives ARCHIVES

Find which archives are on CPAN and download them into the Nix store if they
are not already in ARCHIVES. Add them to ARCHIVES if necessary.

=head2 cp6t-ecosystem cpan generate-nix ARCHIVES

Generate a Nix expression for each archive in ARCHIVES, downloading the
archive if necessary. The Nix expressions are written to stdout.

=head2 cp6t-ecosystem [--only-substitutes] database generate DATABASE

Generate a database with detailed information about each distribution. For
each distribution, the database contains metadata about the distribution, the
comp units in the distribution, and rendered POD. This database is used by
P6AL.

If --only-substitutes is given, then the database will be populated only with
distributions for which a substitute exists in the binary cache. Use this
option if you don’t want to build derivations that weren’t already built in
CI.

=head1 CAVEATS

cp6t-ecosystem cannot cope with multiple authors defining distributions with
the same name. There is simply no way to deal with this in a reproducible
way, unless the auth field is mandatory both in META6 and when importing
modules, which it isn’t.

Imagine two authors A and B define a module M. Which one will you import? You
could import A’s since it has highest version number. Now B updates their
module with a version number greater than A’s. Now you’re suddenly importing
B’s. So, you will be alternating back and forth between authors as they
update their versions.

=head1 BUGS

cp6t-ecosystem discards version bounds on depends. This will be fixed in a
future version, but for now it will always pick the latest version of each
distribution.

cp6t-ecosystem ignores the api field. This will be fixed in a future version,
but for now it will only take the version field into account.
